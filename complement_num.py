'''
给定一个正整数，输出它的补数。补数是对该数的二进制表示取反。

注意:

给定的整数保证在32位带符号整数的范围内。
你可以假定二进制数不包含前导零位。
示例 1:

输入: 5
输出: 2
解释: 5的二进制表示为101（没有前导零位），其补数为010。所以你需要输出2。
示例 2:

输入: 1
输出: 0
解释: 1的二进制表示为1（没有前导零位），其补数为0。所以你需要输出0。
'''


# 有个容易出错的地方, bin()函数转换2进制是str且前两位会有 0b表示是二进制
class Solution:
    def findComplement(self, num):
        """
        :type num: int
        :rtype: int
        """
        _map = {
            '0': '1',
            '1': '0'
        }
        return int(''.join([_map[i] for i in bin(num)[2:]]), 2)


